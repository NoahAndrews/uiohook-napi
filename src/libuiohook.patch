diff --git a/src/windows/input_helper.c b/src/windows/input_helper.c
index e690021..4b7cff1 100644
--- a/src/windows/input_helper.c
+++ b/src/windows/input_helper.c
@@ -298,7 +298,7 @@ unsigned short keycode_to_scancode(DWORD vk_code, DWORD flags) {
     if (vk_code < sizeof(keycode_scancode_table) / sizeof(keycode_scancode_table[0])) {
         scancode = keycode_scancode_table[vk_code][0];
 
-        if (flags & LLKHF_EXTENDED) {
+        if (!(flags & LLKHF_EXTENDED)) {
             logger(LOG_LEVEL_DEBUG, "%s [%u]: Using extended lookup for vk_code: %li\n",
                     __FUNCTION__, __LINE__, vk_code);
 
diff --git a/src/windows/input_hook.c b/src/windows/input_hook.c
index db1e79e..e4fd59a 100644
--- a/src/windows/input_hook.c
+++ b/src/windows/input_hook.c
@@ -595,7 +595,7 @@ LRESULT CALLBACK mouse_hook_event_proc(int nCode, WPARAM wParam, LPARAM lParam)
 // Callback function that handles events.
 void CALLBACK win_hook_event_proc(HWINEVENTHOOK hook, DWORD event, HWND hWnd, LONG idObject, LONG idChild, DWORD dwEventThread, DWORD dwmsEventTime) {
     switch (event) {
-        case EVENT_OBJECT_NAMECHANGE:
+        case EVENT_SYSTEM_FOREGROUND:
             logger(LOG_LEVEL_DEBUG, "%s [%u]: Restarting Windows input hook on window event: %#X.\n",
                     __FUNCTION__, __LINE__, event);
 
@@ -662,7 +662,7 @@ UIOHOOK_API int hook_run() {
 
     // Create a window event hook to listen for capture change.
     win_event_hhook = SetWinEventHook(
-            EVENT_OBJECT_NAMECHANGE, EVENT_OBJECT_NAMECHANGE,
+            EVENT_SYSTEM_FOREGROUND, EVENT_SYSTEM_FOREGROUND,
             NULL,
             win_hook_event_proc,
             0, 0,
diff --git a/src/x11/input_hook.c b/src/x11/input_hook.c
index 15c9b9e..dc2f7b9 100644
--- a/src/x11/input_hook.c
+++ b/src/x11/input_hook.c
@@ -26,8 +26,11 @@
 #include <stdint.h>
 #include <uiohook.h>
 
+#ifdef USE_XKB_COMMON
 #include <xcb/xkb.h>
+#else
 #include <X11/XKBlib.h>
+#endif
 
 #include <X11/keysym.h>
 #include <X11/Xlibint.h>
